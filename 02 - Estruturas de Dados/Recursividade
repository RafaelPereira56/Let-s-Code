{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Recursividade","provenance":[],"authorship_tag":"ABX9TyM7Q9dseyAbp2ELQGVgxPjn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"oogVtRKKLt78"},"source":["def fatorial(n):\n","    if n == 0:\n","        return 1\n","    else:\n","        return n * fatorial(n-1)\n","\n","fatorial (3)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8OqQMmWgTZ1L"},"source":["\n","Questão 1\n","Desenvolva um script que calcule a soma dos N primeiros números naturais. Utilize a recursividade para obter o resultado."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HAfARRSNTPf_","executionInfo":{"status":"ok","timestamp":1631975802506,"user_tz":180,"elapsed":382,"user":{"displayName":"Rafael Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhdQQrCNdamZSZwKRODVWW9jOK_lV_W5e0GRikFYA=s64","userId":"10843354352536919066"}},"outputId":"9ee59c27-b123-410e-c050-2a33f3d6000d"},"source":["def somaNumerosNaturais (n):\n","  if n == 1:\n","    return 1\n","  else:\n","    return n + somaNumerosNaturais (n-1)\n","\n","print (somaNumerosNaturais (10))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["55\n"]}]},{"cell_type":"markdown","metadata":{"id":"KEEOnVqZbQhI"},"source":["\n","Questão 2\n","Dado um array de inteiros e o seu número de elementos, crie uma função recursiva que inverta a posição dos seus elementos."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3xsyQW8dbUJK","executionInfo":{"status":"ok","timestamp":1632066416200,"user_tz":180,"elapsed":231,"user":{"displayName":"Rafael Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhdQQrCNdamZSZwKRODVWW9jOK_lV_W5e0GRikFYA=s64","userId":"10843354352536919066"}},"outputId":"89455b4f-51ac-4011-af63-2e5d12dbbd66"},"source":["def reverterArray (array, size):\n","  if size == 0:\n","    return []\n","  elif size == 1:\n","    return array \n","  else:\n","    return [array.pop(size - 1)] + reverse_array(array, size - 1)\n","\n","print(reverterArray ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Ut52lKKjdaeL"},"source":["Questão 3\n","Desenvolva uma função recursiva que calcule e mostre o maior elemento de um array de tamanho N. Os elementos consistem em números inteiros."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zy3_xxQ7ddoi","executionInfo":{"status":"ok","timestamp":1632072375052,"user_tz":180,"elapsed":226,"user":{"displayName":"Rafael Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhdQQrCNdamZSZwKRODVWW9jOK_lV_W5e0GRikFYA=s64","userId":"10843354352536919066"}},"outputId":"0b4095c8-ccf0-4ee9-de5a-ae5661005352"},"source":["def findMaxRec(A, n):\n","    if (n == 1):\n","        return A[0]\n","    return max(A[n - 1], findMaxRec(A, n - 1))\n","\n","findMaxRec ([1, 2, 3, 4, 5, 6, 52348, 8, 9, 955], 10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["52348"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"2mw-APbmZXXY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632235262442,"user_tz":180,"elapsed":6130,"user":{"displayName":"Rafael Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhdQQrCNdamZSZwKRODVWW9jOK_lV_W5e0GRikFYA=s64","userId":"10843354352536919066"}},"outputId":"220f6b2e-90e2-49f7-e177-996f353d4c68"},"source":["\n","def calculate_p(number_n, number_k):\n","    return int(str(number_n) * int(number_k))\n","\n","def super_digital(number_x):\n","    number_as_string = str(number_x)\n","\n","    sum_of_number = 0\n","\n","    for letter in number_as_string:\n","        sum_of_number += int(letter)\n","    \n","    if sum_of_number < 10:\n","        return sum_of_number\n","    \n","    return super_digital(sum_of_number)\n","\n","\n","def main():\n","    user_input = input()\n","\n","    input_as_array = user_input.split(' ')\n","\n","    number_n = input_as_array[0]\n","\n","    number_k = input_as_array[1]\n","\n","    number_p = calculate_p(number_n, number_k)\n","\n","    print(super_digital(number_p))\n","\n","main()"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["9875 4\n","8\n"]}]},{"cell_type":"code","metadata":{"id":"1rDKea8BgkEp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632235247741,"user_tz":180,"elapsed":4693,"user":{"displayName":"Rafael Pereira","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhdQQrCNdamZSZwKRODVWW9jOK_lV_W5e0GRikFYA=s64","userId":"10843354352536919066"}},"outputId":"ddb51a8c-a4a2-4542-8cb2-e02a2070cd97"},"source":["def calcularP (numeroN, numeroK):\n","    return (int(numeroN)) * (int(numeroK))\n","\n","def superDigito (numeroP):\n","    numeroString = str (numeroP)\n","\n","    somaNUmero = 0\n","\n","    for letra in numeroString:\n","      somaNumero = somaNUmero + int(letra)\n","\n","    if somaNumero < 10:\n","      return somaNumero      \n"," \n","    else:\n","      return superDigito (somaNumero)   \n","\n","\n","def main():\n","    inputUser = input()\n","\n","    inputArray = inputUser.split(' ')\n","\n","    numeroN = inputArray [0]\n","\n","    numeroK = inputArray [1]\n","\n","    numeroP = calcularP (numeroN, numeroK)\n","\n","    print(superDigito(numeroP))\n","\n","main()"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["148 3\n","4\n"]}]}]}